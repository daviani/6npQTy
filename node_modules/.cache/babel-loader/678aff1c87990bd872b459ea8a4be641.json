{"ast":null,"code":"var _jsxFileName = \"/var/www/ZTest/6npqty/src/pages/ReactLevel2.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { GIT_URL } from '../config';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ReactLevel2 = () => {\n  _s();\n\n  const [query, setQuery] = useState('');\n  const [items, setItems] = useState({});\n  const [totalCount, setTotalCount] = useState('');\n\n  const httpRequest = () => {\n    fetch(GIT_URL + query, {\n      method: 'GET'\n    }).then(function (response) {\n      return response.json();\n    }).catch(function () {\n      console.log('error');\n    }).then(function (json) {\n      setItems(json.items);\n      setTotalCount(json.total_count);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"jumbotron jumbotronHome mt-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"display-3\",\n      children: \"Github user search\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"lead\",\n      children: \"Create an input text in which as the user types in, launch a search against Github users and return a result list.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-9\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"form-control\",\n            placeholder: \"Search\",\n            type: \"text\",\n            onChange: e => {\n              setQuery(e.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-3\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"btn bg-gradient-primary\",\n            onClick: httpRequest,\n            children: \"Search\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n      className: \"my-4\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), totalCount > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"zero\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 1\n    }, this), totalCount < 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"pas zero\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 2\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ReactLevel2, \"bjOXn2fNuH6vh39Obs4O1nJV9ng=\");\n\n_c = ReactLevel2;\nexport default ReactLevel2;\n\nvar _c;\n\n$RefreshReg$(_c, \"ReactLevel2\");","map":{"version":3,"sources":["/var/www/ZTest/6npqty/src/pages/ReactLevel2.jsx"],"names":["React","useState","GIT_URL","ReactLevel2","query","setQuery","items","setItems","totalCount","setTotalCount","httpRequest","fetch","method","then","response","json","catch","console","log","total_count","e","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,OAAT,QAAwB,WAAxB;;;AAEA,MAAMC,WAAW,GAAG,MAAM;AAAA;;AACxB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACK,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACO,UAAD,EAAaC,aAAb,IAA6BR,QAAQ,CAAC,EAAD,CAA3C;;AAEA,QAAMS,WAAW,GAAG,MAAM;AACxBC,IAAAA,KAAK,CAACT,OAAO,GAAGE,KAAX,EACH;AAAEQ,MAAAA,MAAM,EAAE;AAAV,KADG,CAAL,CAEGC,IAFH,CAEQ,UAAUC,QAAV,EAAoB;AACxB,aAAOA,QAAQ,CAACC,IAAT,EAAP;AACD,KAJH,EAKGC,KALH,CAKS,YAAY;AACjBC,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACD,KAPH,EAQGL,IARH,CAQQ,UAAUE,IAAV,EAAgB;AACpBR,MAAAA,QAAQ,CAACQ,IAAI,CAACT,KAAN,CAAR;AACAG,MAAAA,aAAa,CAACM,IAAI,CAACI,WAAN,CAAb;AACD,KAXH;AAYD,GAbD;;AAeA,sBACE;AAAK,IAAA,SAAS,EAAC,8BAAf;AAAA,4BACE;AAAI,MAAA,SAAS,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAIE;AAAG,MAAA,SAAS,EAAC,MAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF,eAQE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA,gCACE;AAAK,UAAA,SAAS,EAAC,OAAf;AAAA,iCACE;AAAO,YAAA,SAAS,EAAC,cAAjB;AAAgC,YAAA,WAAW,EAAC,QAA5C;AAAqD,YAAA,IAAI,EAAC,MAA1D;AACO,YAAA,QAAQ,EAAGC,CAAD,IAAO;AACff,cAAAA,QAAQ,CAACe,CAAC,CAACC,MAAF,CAASC,KAAV,CAAR;AACD;AAHR;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eAQE;AAAK,UAAA,SAAS,EAAC,OAAf;AAAA,iCACE;AAAQ,YAAA,IAAI,EAAC,QAAb;AAAsB,YAAA,SAAS,EAAC,yBAAhC;AAA0D,YAAA,OAAO,EAAEZ,WAAnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBARF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YARF,eAsBE;AAAI,MAAA,SAAS,EAAC;AAAd;AAAA;AAAA;AAAA;AAAA,YAtBF,EAwBOF,UAAU,GAAG,CAAb,iBACX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAzBI,EA2BOA,UAAU,GAAG,CAAb,iBACV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YA5BG;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAqCD,CAzDD;;GAAML,W;;KAAAA,W;AA2DN,eAAeA,WAAf","sourcesContent":["import React, { useState } from 'react'\nimport { GIT_URL } from '../config'\n\nconst ReactLevel2 = () => {\n  const [query, setQuery] = useState('')\n  const [items, setItems] = useState({})\n  const [totalCount, setTotalCount] =useState('')\n\n  const httpRequest = () => {\n    fetch(GIT_URL + query,\n      { method: 'GET' })\n      .then(function (response) {\n        return response.json()\n      })\n      .catch(function () {\n        console.log('error')\n      })\n      .then(function (json) {\n        setItems(json.items)\n        setTotalCount(json.total_count)\n      })\n  }\n\n  return (\n    <div className='jumbotron jumbotronHome mt-5'>\n      <h1 className='display-3'>\n        Github user search\n      </h1>\n      <p className='lead'>\n        Create an input text in which as the user types in, launch a search against Github users and return a result\n        list.\n      </p>\n      <div className=\"container\">\n        <div className=\"row\">\n          <div className=\"col-9\">\n            <input className=\"form-control\" placeholder=\"Search\" type=\"text\"\n                   onChange={(e) => {\n                     setQuery(e.target.value)\n                   }}\n            />\n          </div>\n          <div className=\"col-3\">\n            <button type=\"button\" className=\"btn bg-gradient-primary\" onClick={httpRequest}>Search</button>\n          </div>\n        </div>\n      </div>\n      <hr className='my-4'/>\n\n          {totalCount > 0 && (\n<div>zero</div>\n          )}\n          {totalCount < 0 && (\n <div>pas zero</div>\n          )}\n\n\n\n      </div>\n\n  )\n}\n\nexport default ReactLevel2"]},"metadata":{},"sourceType":"module"}